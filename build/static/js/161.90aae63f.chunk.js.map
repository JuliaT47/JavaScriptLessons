{"version":3,"file":"static/js/161.90aae63f.chunk.js","mappings":"4JAEAA,EAAAA,EAAMC,SAASC,QAAU,yBAEzB,MAAMC,EAAkBC,gBACCJ,EAAAA,EAAMK,IAAI,aACjBC,KAGZC,EAAaH,gBACMJ,EAAAA,EAAMQ,KAAK,WAAYC,IAC9BH,KAGZI,EAAgBN,gBACdJ,EAAAA,EAAMW,OAAO,YAADC,OAAaC,GAAK,E,sBCNtC,MAgEA,EAhEgBC,KACd,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,IACnCC,GAAWC,EAAAA,EAAAA,OAETb,KAAMc,EAAW,WAAEC,KADVC,EAAAA,EAAAA,OACyBC,EAAAA,EAAAA,UACxC,CAAC,eACDpB,EACA,CACEqB,UAAYlB,IACVU,EAAYV,EAAK,EAEnBmB,oBAAoB,EACpBC,sBAAsB,MAIlBC,YAAaC,IAAcC,EAAAA,EAAAA,aAAYtB,EAAY,CACzDiB,UAAYlB,IACVU,GAAac,GAAS,IAAIA,EAAMxB,IAAM,KAIlCqB,YAAaI,IAAiBF,EAAAA,EAAAA,aAAYnB,EAAe,CAC/Dc,UAAWA,CAACQ,EAAGnB,KACbG,GAAac,GAASA,EAAKG,QAAQC,GAASA,EAAKrB,KAAOA,KAAI,IAiBhE,OACEsB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,UAAQC,QAASA,IAAMrB,GAAU,GAAGmB,SAAC,aACpChB,EACC,cAEAiB,EAAAA,EAAAA,KAAA,MAAAD,SACW,OAARtB,QAAQ,IAARA,OAAQ,EAARA,EAAUyB,KAAKC,IACdN,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAA,GAAAzB,OAAO6B,EAAQC,KAAI,KAAA9B,OAAI6B,EAAQE,aAC/BL,EAAAA,EAAAA,KAAA,UAAQC,QAASA,IAfCnC,iBACtB2B,EAAalB,EAAG,EAcW+B,CAAsBH,EAAQ5B,IAAIwB,SAAC,aAFnDI,EAAQ5B,SASvByB,EAAAA,EAAAA,KAAA,UAAQC,QA/BUnC,gBAMdwB,EALU,CACdc,KAAM,OACNC,SAAU,aAGY,EAyBSN,SAAC,sBAC/B,C","sources":["Module 45/Api.js","Module 45/contacts.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:3030/\";\n\nconst getContactsList = async () => {\n  const contacts = await axios.get(\"contacts\");\n  return contacts.data;\n};\n\nconst addContact = async (payload) => {\n  const contacts = await axios.post(\"contacts\", payload);\n  return contacts.data;\n};\n\nconst deleteContact = async (id) => {\n  await axios.delete(`contacts/${id}`);\n};\n\nconst addUser = async (payload) => {\n  const contacts = await axios.post(\"auth\", payload);\n};\n\nconst getAllUsers = async () => {\n  const contacts = await axios.get(\"auth\");\n  return contacts.data;\n};\n\nexport { getContactsList, addContact, deleteContact, addUser, getAllUsers };\n","// const Contacts = () => {\n//   return <h2>Contacts</h2>;\n// };\n// export default Contacts;\nimport { useMutation, useQuery } from \"react-query\";\nimport { useState } from \"react\";\nimport { addContact, deleteContact, getContactsList } from \"./Api\";\nimport { useLocation, useNavigate } from \"react-router\";\n\nconst Contact = () => {\n  const [contacts, setContacts] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { data: contactList, isFetching } = useQuery(\n    [\"contactList\"],\n    getContactsList,\n    {\n      onSuccess: (data) => {\n        setContacts(data);\n      },\n      refetchOnReconnect: false,\n      refetchOnWindowFocus: false,\n    }\n  );\n\n  const { mutateAsync: handleAdd } = useMutation(addContact, {\n    onSuccess: (data) => {\n      setContacts((prev) => [...prev, data]);\n    },\n  });\n\n  const { mutateAsync: handleDelete } = useMutation(deleteContact, {\n    onSuccess: (_, id) => {\n      setContacts((prev) => prev.filter((item) => item.id !== id));\n    },\n  });\n\n  const addNewContact = async () => {\n    const payload = {\n      name: \"Luke\",\n      lastName: \"Skywalker\",\n    };\n\n    await handleAdd(payload);\n  };\n\n  const deleteSpecificContact = async (id) => {\n    await handleDelete(id);\n  };\n\n  return (\n    <>\n      <h1>Contacts</h1>\n      <button onClick={() => navigate(-1)}>Get back</button>\n      {isFetching ? (\n        \"Loading...\"\n      ) : (\n        <ul>\n          {contacts?.map((contact) => (\n            <li key={contact.id}>\n              <p>{`${contact.name} ${contact.lastName}`}</p>\n              <button onClick={() => deleteSpecificContact(contact.id)}>\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n      <button onClick={addNewContact}>Add new contact</button>\n    </>\n  );\n};\n\nexport default Contact;\n"],"names":["axios","defaults","baseURL","getContactsList","async","get","data","addContact","post","payload","deleteContact","delete","concat","id","Contact","contacts","setContacts","useState","navigate","useNavigate","contactList","isFetching","useLocation","useQuery","onSuccess","refetchOnReconnect","refetchOnWindowFocus","mutateAsync","handleAdd","useMutation","prev","handleDelete","_","filter","item","_jsxs","_Fragment","children","_jsx","onClick","map","contact","name","lastName","deleteSpecificContact"],"sourceRoot":""}